<! DOCTYPE html>
<html>
    <head lang="en">
        <meta http-equiv="Content-Type" content="text/html; charset =utf-8"/>
        <meta charset ="UTF-8">
        <title>Client API with the new hosted iFrames</title>
    </head>
    <body>
        <h1>
            Payone client api with new hosted iFrame
        </h1>
        <form name="paymentform" action ="#" method = "post">
            
            <fieldset> 
            <input type ="hidden" name="pseudocardpan" id="pseudocardpan"> 
            <input type ="hidden" name="truncatedcardpan" id="truncatedcardpan"> 
            <input type ="hidden" name="cardtypeResponse" id="cardtypeResponse"> 
            <input type ="hidden" name="cardexpiredateResponse" id="cardexpiredateResponse"> 
            
            <label for="cardtype"> Cart Type:</label>
            <span class ="inputIframe" id ="expireInput">
                <span id ="cardexpiremonth"></span>
                <span id ="cardexpireyear"></span>
            </span>
            
            <label for="firstname">Firstname:</label>
            <input id="firstname" type ="text" name= "firstname" value ="" placeholder ="Firstname">
            
            <label for="lastname">Lastname:</label>
            <input id="" type ="text" name= "lastname" value ="" placeholder ="Lastname">
            
            <div id ="error"></div>
            <br/>
            <input id="submit" type ="button" value="Run credit Card Check">
            </fieldset>
        </form>
        <h2> The JSON received from the server</h2>
        <div id="jsonResponse"><pre if="jsonResponsePre">Nothing received yet.</pre></div>
        <h2> Autodetection callback result </h2>
        <div id="autodetectionResponse"><pre id="autodetectionResponsePre">Nothing Received Yet.</pre></div>
        <h2> Set card type manually</h2>
        <div class="maxWidth"> <p class="infoText"> DROPDOWN SELECT HERE</p></div>
        <script src="https://secure.pay1.de/client-api/js/v1/payone_hosted_min.js"></script>
        <script> 
            var request, supportedCardtypes=["#","V","M", "J", "U", "P"], config;

              config ={
                fields:{
                  cardpan:{
                    selector:"cardpan",
                    style: "font-size: 14 px; border : 1px solid #000;",
                    type:"input"
                  },
                  cardcvc2:{
                  selector:"cardcvc2",
                  type:"password",
                  style: "font-size: 14px; border: 1 px solid #000",
                  size: "4"
                  maxlength: "4",
                  length:{"a":4, "V": 3, "J": false}
                },
                cardexpiremonth:{
                  selector: "cardexpiremonth",
                  type: "text",
                  maxlength:"2",
                  size:"2",
                  iframe:{
                    width: "40px"
                  }
                  style: "font-size: 14 px; width: 30 px; border: solid 1px #000; height: 22px;"
                },
                cardexpireyear:{
                  selector: "cardexpireyear",
                  type: "text",
                  iframe:{
                    width: "60px"
                  }
                  style: "font-size: 14 px; width: 30 px; border: solid 1px #000; height: 22px;"
                },
                cardtype: {
                  selector: "cardtype",
                  cardtypes: supportedCardtypes
                 }
               },
               defaultStyle{
                   input:"font-size: lem; border: 1 px; solid #000; width: 175px;",
                   select: "font-size: lem; border: 1 px solid #000",
                   iframe:{
                       height: "22px",
                       width: "180px"
                   }
               },
              autoCardtypeDetection:{
                supportedCardtypes: supportedCardtypes,
                callback: function(detectedCardtype){
                   document.getEelementById('autodetectionResponsePre').innerHTML = detectedCardtype;
                }
              },
                language: Payone.ClientApi.Language.en,
                error: "error"
              };
            
                request ={
                    request: 'creditcardcheck',
                    responsetype: 'JSON',
                    mode: 'test',
                    mid: '',  //CHANGE LATER TO STORITY MID
                    aid: '', //CHANGE LATER TO STORITY AID
                    portalid: '', //CHANGE LATER TO STORITY PORTAL ID
                    encoding: 'UTF-8',
                    storecarddata: 'yes',
                    key: '',
                    hash: ''
                };
                
                var iframes = new Payone.ClientApi.HostedIFrames(config, request);
                
                document.getElementById('setCardTypeManually').onclick = function(){
                    iframes.setCardType(document.getElementById('manCardType').value);
                };
                
                function pay(){
                    if (iframes.isComplete()){
                        iframes.creditCardCheck('payCallback');
                    }
                    else {
                        alert("Not complete. Nothing done.");
                    }
                }
                
                document.getElementById("submit").onclick = function(){
                    pay();
                };
                
                function payCallback(response){
                  console.debug(response);
                  if(response.status ==="VALID"){
                    document.getElementById("pseudocardpan").value = response.pseudocardpan;
                    document.getElementById("truncatedcardpan").value = response.truncatedcardpan;
                    document.getElementById("cardtypeResponse").value = response.cardtype;
                    document.getElementById("cardexpiredateResponse").value = response.cardexpiredate;
            
                  }
                  if(typeof response === 'object'){
                    var responseAsString = 'time' + new Date().getTime() + "\n";
                    for(var key in response){
                      if(response.hasOwnProperty(key)){
                        responseAsString+=key+ ':' + response(key) + "\n";
                      }
                    }
                    document.getEelementById('jsonResponsePre').innerHTML = responseAsString;
                  }
                }
        </script>
    </body>
</html>
